CREATE TABLE IF NOT EXISTS "user" (
    id SERIAL PRIMARY KEY,
    email VARCHAR(50) NOT NULL,
    fullname VARCHAR(30) NOT NULL,
    password VARCHAR(18) NOT NULL,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS seller (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES "user"(id),
    name VARCHAR(30) NOT NULL,
    description VARCHAR(100) NOT NULL,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS basket (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES "user"(id)
);

CREATE TABLE IF NOT EXISTS basket_product (
    id SERIAL PRIMARY KEY,
    basket_id INTEGER NOT NULL REFERENCES basket(id)
);

CREATE TABLE IF NOT EXISTS type (
    id SERIAL PRIMARY KEY,
    name VARCHAR(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS brand (
    id SERIAL PRIMARY KEY,
    name VARCHAR(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS color (
    id SERIAL PRIMARY KEY,
    hex VARCHAR(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS rating (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES "user"(id),
    value FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS product (
    id SERIAL PRIMARY KEY,
    title VARCHAR(30) NOT NULL,
    description VARCHAR(100) NOT NULL,
    price FLOAT NOT NULL,
    seller_id INTEGER NOT NULL REFERENCES seller(id),
    type_id INTEGER NOT NULL REFERENCES type(id),
    brand_id INTEGER NOT NULL REFERENCES brand(id),
    color_id INTEGER NOT NULL REFERENCES color(id),
    rating_id INTEGER NOT NULL REFERENCES rating(id),
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE "user" ADD COLUMN basket_id INTEGER NOT NULL REFERENCES basket(id);
ALTER TABLE basket_product ADD COLUMN product_id INTEGER NOT NULL REFERENCES product(id);
ALTER TABLE rating ADD COLUMN product_id INTEGER NOT NULL REFERENCES product(id)